<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on win32)" generated="20200124 15:53:10.298" rpa="false">
<suite id="s1" name="Test" source="C:\Users\asinatra\Desktop\ECLIPSE_WORKSPACE\tng-tests\tests\VnV\test_vnv_industrial_pilot_IPreq008\test.robot">
<test id="s1-t1" name="Setting the VnV Path">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${from_date}</var>
</assign>
<msg timestamp="20200124 15:53:10.721" level="INFO">${from_date} = 2020-01-24 15:53:10.721</msg>
<status status="PASS" starttime="20200124 15:53:10.720" endtime="20200124 15:53:10.721"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${from_date}</arg>
</arguments>
<msg timestamp="20200124 15:53:10.721" level="INFO">${from_date} = 2020-01-24 15:53:10.721</msg>
<status status="PASS" starttime="20200124 15:53:10.721" endtime="20200124 15:53:10.721"></status>
</kw>
<kw name="Set Sp Path" library="tnglib">
<doc>Set the path were the SP can be reached.</doc>
<arguments>
<arg>${VNV_HOST}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:10.722" endtime="20200124 15:53:10.722"></status>
</kw>
<kw name="Sp Health Check" library="tnglib">
<doc>Check if SP is reachable.</doc>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200124 15:53:11.300" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200124 15:53:10.722" endtime="20200124 15:53:11.300"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:11.300" endtime="20200124 15:53:11.301"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:10.720" endtime="20200124 15:53:11.301" critical="yes"></status>
</test>
<test id="s1-t2" name="Clean the Packages">
<kw name="Get Packages" library="tnglib">
<doc>Returns info on all available packages.</doc>
<assign>
<var>@{PACKAGES}</var>
</assign>
<msg timestamp="20200124 15:53:13.025" level="INFO">@{PACKAGES} = [ True | [{'package_uuid': '92212b3a-9fba-4881-9d6e-4bdb51880820', 'name': 'ns-mediapilot-service', 'version': '0.9', 'created_at': '2020-01-16T23:15:39.121+00:00'}, {'package_uuid': 'bfb3bcc6-4eba-40...</msg>
<status status="PASS" starttime="20200124 15:53:11.302" endtime="20200124 15:53:13.025"></status>
</kw>
<kw name="${PACKAGE} IN [ @{PACKAGES[1]} ]" type="for">
<kw name="${PACKAGE} = {'package_uuid': '92212b3a-9fba-4881-9d6e-4bdb51880820', 'name': 'ns-mediapilot-service', 'version': '0.9', 'created_at': '2020-01-16T23:15:39.121+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:13.026" endtime="20200124 15:53:13.027"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:13.025" endtime="20200124 15:53:13.027"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': 'bfb3bcc6-4eba-408a-ac16-618a762377f6', 'name': 'media-mse-stress-test', 'version': '0.2', 'created_at': '2020-01-16T23:16:43.970+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:13.027" endtime="20200124 15:53:13.028"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:13.027" endtime="20200124 15:53:13.028"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': '24a8eac3-6ce4-4685-807e-cf33753778d5', 'name': 'test-industrial-pilot-ns1-jitter', 'version': '1.9', 'created_at': '2020-01-20T13:42:59.928+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:13.028" endtime="20200124 15:53:13.031"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:13.028" endtime="20200124 15:53:13.031"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': 'd97762df-e6c0-4cb2-9280-0fcb80e805ee', 'name': 'industrial-pilot-test-egm-rampup-payload', 'version': '0.2', 'created_at': '2020-01-21T08:29:20.868+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:13.031" endtime="20200124 15:53:13.032"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:13.031" endtime="20200124 15:53:13.032"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': '8c0b8a84-589d-4a02-ba3e-66ba9a7ff2bd', 'name': 'test-industrial-pilot-ns1-jitter-rampup', 'version': '0.1', 'created_at': '2020-01-22T10:22:11.184+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:13.032" endtime="20200124 15:53:13.032"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:13.032" endtime="20200124 15:53:13.032"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': 'b6a19603-ea64-4021-8c42-ad61025a089d', 'name': 'test-industrial-pilot-ns1-jitter-rampup', 'version': '0.2', 'created_at': '2020-01-22T10:45:18.043+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:13.033" endtime="20200124 15:53:13.034"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:13.032" endtime="20200124 15:53:13.034"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': '54e630f8-187c-46f7-b50e-f94dee298b35', 'name': 'test-industrial-pilot-ns1-jitter-rampup', 'version': '0.3', 'created_at': '2020-01-22T11:29:38.327+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:13.034" endtime="20200124 15:53:13.035"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:13.034" endtime="20200124 15:53:13.035"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': 'bf1bc058-60bc-4356-b7ae-2c58d1809f2e', 'name': 'tng-smpilot-ns1-k8s-egm', 'version': '2.0', 'created_at': '2020-01-23T09:19:56.852+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<kw name="Remove Package" library="tnglib">
<doc>Removes one package from the catalogue.</doc>
<arguments>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:13.038" endtime="20200124 15:53:13.540"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:13.036" endtime="20200124 15:53:13.540"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:13.036" endtime="20200124 15:53:13.541"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': 'b1a76a60-23dc-455f-809c-74923490dcd0', 'name': 'test-industrial-pilot-ns1-jitter-rampup-long', 'version': '0.1', 'created_at': '2020-01-23T09:20:00.913+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:13.541" endtime="20200124 15:53:13.542"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:13.541" endtime="20200124 15:53:13.542"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:13.025" endtime="20200124 15:53:13.542"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:11.302" endtime="20200124 15:53:13.542" critical="yes"></status>
</test>
<test id="s1-t3" name="Upload the NS Package">
<kw name="Upload Package" library="tnglib">
<doc>Uploads a package from file.</doc>
<arguments>
<arg>${FILE_SOURCE_DIR}/${NS_PACKAGE_NAME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200124 15:53:18.132" level="INFO">${result} = (True, 'b75bd926-21aa-4eb9-a5d4-b36b409f0994')</msg>
<status status="PASS" starttime="20200124 15:53:13.543" endtime="20200124 15:53:18.133"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:18.133" endtime="20200124 15:53:18.134"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:13.543" endtime="20200124 15:53:18.135" critical="yes"></status>
</test>
<test id="s1-t4" name="Upload the TST Package">
<kw name="Upload Package" library="tnglib">
<doc>Uploads a package from file.</doc>
<arguments>
<arg>${FILE_SOURCE_DIR}/${TST_PACKAGE_NAME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200124 15:53:24.766" level="INFO">${result} = (True, '186969bc-4a20-448f-81dc-3cee7d106c06')</msg>
<status status="PASS" starttime="20200124 15:53:18.138" endtime="20200124 15:53:24.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result[1]}</arg>
</arguments>
<msg timestamp="20200124 15:53:24.770" level="INFO">186969bc-4a20-448f-81dc-3cee7d106c06</msg>
<status status="PASS" starttime="20200124 15:53:24.768" endtime="20200124 15:53:24.771"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:24.772" endtime="20200124 15:53:24.774"></status>
</kw>
<status status="PASS" starttime="20200124 15:53:18.135" endtime="20200124 15:53:24.775" critical="yes"></status>
</test>
<test id="s1-t5" name="Wait For Service Instance Ready">
<kw name="Set Sp Path" library="tnglib">
<doc>Set the path were the SP can be reached.</doc>
<arguments>
<arg>${SP_HOST}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:24.782" endtime="20200124 15:53:24.785"></status>
</kw>
<kw name="Sp Health Check" library="tnglib">
<doc>Check if SP is reachable.</doc>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200124 15:53:25.288" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200124 15:53:24.786" endtime="20200124 15:53:25.289"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20200124 15:53:25.290" endtime="20200124 15:53:25.291"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>120</arg>
</arguments>
<status status="FAIL" starttime="20200124 15:53:25.292" endtime="20200124 15:55:06.676"></status>
</kw>
<status status="FAIL" starttime="20200124 15:53:24.778" endtime="20200124 15:55:06.676" critical="yes">Execution terminated by signal</status>
</test>
<test id="s1-t6" name="Wait For Test Execution">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200124 15:55:06.677" endtime="20200124 15:55:06.678" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t7" name="Obtain GrayLogs">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200124 15:55:06.679" endtime="20200124 15:55:06.680" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>Test suite for the MQTT broker stress test</doc>
<status status="FAIL" starttime="20200124 15:53:10.299" endtime="20200124 15:55:06.682"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="3">Critical Tests</stat>
<stat pass="4" fail="3">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="1" info="combined" combined="NOT robot:exit">NOT robot:exit</stat>
<stat pass="0" fail="2">robot:exit</stat>
</tag>
<suite>
<stat pass="4" fail="3" id="s1" name="Test">Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
