<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.4 on win32)" generated="20200122 12:29:30.598" rpa="false">
<suite id="s1" name="Test" source="C:\Users\asinatra\Desktop\ECLIPSE_WORKSPACE\tng-tests\tests\VnV\test_vnv_industrial_pilot_IPreq009_rampup\test.robot">
<test id="s1-t1" name="Setting the VnV Path">
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<assign>
<var>${from_date}</var>
</assign>
<msg timestamp="20200122 12:29:31.072" level="INFO">${from_date} = 2020-01-22 12:29:31.072</msg>
<status status="PASS" starttime="20200122 12:29:31.072" endtime="20200122 12:29:31.072"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${from_date}</arg>
</arguments>
<msg timestamp="20200122 12:29:31.073" level="INFO">${from_date} = 2020-01-22 12:29:31.072</msg>
<status status="PASS" starttime="20200122 12:29:31.072" endtime="20200122 12:29:31.073"></status>
</kw>
<kw name="Set Sp Path" library="tnglib">
<doc>Set the path were the SP can be reached.</doc>
<arguments>
<arg>${VNV_HOST}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:31.073" endtime="20200122 12:29:31.073"></status>
</kw>
<kw name="Sp Health Check" library="tnglib">
<doc>Check if SP is reachable.</doc>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200122 12:29:31.508" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200122 12:29:31.073" endtime="20200122 12:29:31.508"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:31.508" endtime="20200122 12:29:31.509"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:31.071" endtime="20200122 12:29:31.509" critical="yes"></status>
</test>
<test id="s1-t2" name="Clean the Packages">
<kw name="Get Packages" library="tnglib">
<doc>Returns info on all available packages.</doc>
<assign>
<var>@{PACKAGES}</var>
</assign>
<msg timestamp="20200122 12:29:32.196" level="INFO">@{PACKAGES} = [ True | [{'package_uuid': '92212b3a-9fba-4881-9d6e-4bdb51880820', 'name': 'ns-mediapilot-service', 'version': '0.9', 'created_at': '2020-01-16T23:15:39.121+00:00'}, {'package_uuid': 'bfb3bcc6-4eba-40...</msg>
<status status="PASS" starttime="20200122 12:29:31.510" endtime="20200122 12:29:32.196"></status>
</kw>
<kw name="${PACKAGE} IN [ @{PACKAGES[1]} ]" type="for">
<kw name="${PACKAGE} = {'package_uuid': '92212b3a-9fba-4881-9d6e-4bdb51880820', 'name': 'ns-mediapilot-service', 'version': '0.9', 'created_at': '2020-01-16T23:15:39.121+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:32.197" endtime="20200122 12:29:32.198"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:32.197" endtime="20200122 12:29:32.198"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': 'bfb3bcc6-4eba-408a-ac16-618a762377f6', 'name': 'media-mse-stress-test', 'version': '0.2', 'created_at': '2020-01-16T23:16:43.970+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:32.198" endtime="20200122 12:29:32.199"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:32.198" endtime="20200122 12:29:32.199"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': '24a8eac3-6ce4-4685-807e-cf33753778d5', 'name': 'test-industrial-pilot-ns1-jitter', 'version': '1.9', 'created_at': '2020-01-20T13:42:59.928+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:32.199" endtime="20200122 12:29:32.201"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:32.199" endtime="20200122 12:29:32.201"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': 'd97762df-e6c0-4cb2-9280-0fcb80e805ee', 'name': 'industrial-pilot-test-egm-rampup-payload', 'version': '0.2', 'created_at': '2020-01-21T08:29:20.868+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:32.201" endtime="20200122 12:29:32.202"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:32.201" endtime="20200122 12:29:32.202"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': '8c0b8a84-589d-4a02-ba3e-66ba9a7ff2bd', 'name': 'test-industrial-pilot-ns1-jitter-rampup', 'version': '0.1', 'created_at': '2020-01-22T10:22:11.184+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:32.203" endtime="20200122 12:29:32.203"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:32.202" endtime="20200122 12:29:32.203"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': '238f7cbc-48f9-466d-81bb-038a87fb0bf9', 'name': 'tng-smpilot-ns1-k8s-egm', 'version': '1.9', 'created_at': '2020-01-22T10:45:15.057+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<kw name="Remove Package" library="tnglib">
<doc>Removes one package from the catalogue.</doc>
<arguments>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:32.204" endtime="20200122 12:29:32.644"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:32.203" endtime="20200122 12:29:32.645"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:32.203" endtime="20200122 12:29:32.645"></status>
</kw>
<kw name="${PACKAGE} = {'package_uuid': 'b6a19603-ea64-4021-8c42-ad61025a089d', 'name': 'test-industrial-pilot-ns1-jitter-rampup', 'version': '0.2', 'created_at': '2020-01-22T10:45:18.043+00:00'}" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${PACKAGE['name']}'== '${NS_PACKAGE_SHORT_NAME}' or '${PACKAGE['name']}'== '${TST_PACKAGE_SHORT_NAME}'</arg>
<arg>Remove Package</arg>
<arg>${PACKAGE['package_uuid']}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:32.645" endtime="20200122 12:29:32.646"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:32.645" endtime="20200122 12:29:32.646"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:32.197" endtime="20200122 12:29:32.646"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:31.509" endtime="20200122 12:29:32.647" critical="yes"></status>
</test>
<test id="s1-t3" name="Upload the NS Package">
<kw name="Upload Package" library="tnglib">
<doc>Uploads a package from file.</doc>
<arguments>
<arg>${FILE_SOURCE_DIR}/${NS_PACKAGE_NAME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200122 12:29:36.371" level="INFO">${result} = (True, 'de12b803-20f3-41bb-9032-659845867582')</msg>
<status status="PASS" starttime="20200122 12:29:32.648" endtime="20200122 12:29:36.371"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:36.371" endtime="20200122 12:29:36.372"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:32.647" endtime="20200122 12:29:36.372" critical="yes"></status>
</test>
<test id="s1-t4" name="Upload the TST Package">
<kw name="Upload Package" library="tnglib">
<doc>Uploads a package from file.</doc>
<arguments>
<arg>${FILE_SOURCE_DIR}/${TST_PACKAGE_NAME}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200122 12:29:40.276" level="INFO">${result} = (True, '54e630f8-187c-46f7-b50e-f94dee298b35')</msg>
<status status="PASS" starttime="20200122 12:29:36.372" endtime="20200122 12:29:40.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result[1]}</arg>
</arguments>
<msg timestamp="20200122 12:29:40.277" level="INFO">54e630f8-187c-46f7-b50e-f94dee298b35</msg>
<status status="PASS" starttime="20200122 12:29:40.276" endtime="20200122 12:29:40.277"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result[0]}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:40.278" endtime="20200122 12:29:40.278"></status>
</kw>
<status status="PASS" starttime="20200122 12:29:36.372" endtime="20200122 12:29:40.279" critical="yes"></status>
</test>
<test id="s1-t5" name="Wait For Service Instance Ready">
<kw name="Set Sp Path" library="tnglib">
<doc>Set the path were the SP can be reached.</doc>
<arguments>
<arg>${SP_HOST}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:40.280" endtime="20200122 12:29:40.281"></status>
</kw>
<kw name="Sp Health Check" library="tnglib">
<doc>Check if SP is reachable.</doc>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200122 12:29:40.775" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20200122 12:29:40.281" endtime="20200122 12:29:40.775"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20200122 12:29:40.775" endtime="20200122 12:29:40.776"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>120</arg>
</arguments>
<status status="FAIL" starttime="20200122 12:29:40.776" endtime="20200122 12:30:53.562"></status>
</kw>
<status status="FAIL" starttime="20200122 12:29:40.279" endtime="20200122 12:30:53.562" critical="yes">Execution terminated by signal</status>
</test>
<test id="s1-t6" name="Wait For Test Execution">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200122 12:30:53.563" endtime="20200122 12:30:53.563" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t7" name="Obtain GrayLogs">
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200122 12:30:53.564" endtime="20200122 12:30:53.565" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<doc>Test suite for the MQTT broker stress test</doc>
<status status="FAIL" starttime="20200122 12:29:30.600" endtime="20200122 12:30:53.566"></status>
</suite>
<statistics>
<total>
<stat pass="4" fail="3">Critical Tests</stat>
<stat pass="4" fail="3">All Tests</stat>
</total>
<tag>
<stat pass="4" fail="1" info="combined" combined="NOT robot:exit">NOT robot:exit</stat>
<stat pass="0" fail="2">robot:exit</stat>
</tag>
<suite>
<stat pass="4" fail="3" id="s1" name="Test">Test</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
